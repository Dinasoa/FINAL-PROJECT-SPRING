openapi: 3.0.3
info:
  title: Get scholarship abroad
  description: API Spec for getting scholarship abroad
  version: '1.0'

servers:
  - url: https://bourseDi/api/v3

tags:
  - name: Scholarship
    description:  endpoints grouping the requests that will be made on scholarship

  - name: Applicant
paths:
  /scholarships:
    get:
      tags:
        - Scholarship
      summary: "Get list of scholarships filter by the date limit"
      operationId: "getScholarship"
      parameters:
        - name: "pageNumber"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "pageSize"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Scholarship"
    put:
      tags:
        - Scholarship
      summary: Update an existing scholarship
      description: Update an existing scholarship by Id
      operationId: updateScholarship
      requestBody:
        description: Update an existent scholarship
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scholarship'
        required: true

      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scholarship'

        '400':
          description: Invalid ID supplied
        '404':
          description: Scholarship not found
        '405':
          description: Validation exception

    post:
      tags:
        - Scholarship
      summary: Add a new scholarship
      description: Add a new scholarship
      operationId: addScholarship
      requestBody:
        description: Create a new scholarship
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScholarship'

        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scholarship'

  /scholarships/univ:
    get:
      tags:
        - Scholarship
      summary: "Get scholarship by university name"
      operationId: "getScholarshipByUniversity"
      parameters:
        - name: "university_name"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Scholarship"
        "400":
            description: "Bad request"

  /scholarships/country:
    get:
      tags:
        - Scholarship
      summary: "GET scholarships/country"
      operationId: "getScholarshipByCountry"
      parameters:
        - name: "country_name"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Scholarship"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'

  /scholarship/{id_scholarship}:
    delete:
      tags:
        - Scholarship
      description: delete scholarship by identifier
      parameters:
        - name: id_scholarship
          in: path
          description: ID of scholarship to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Scholarship not found

  /criterias:
    get:
      tags:
        - Criteria
      summary: "Get all criteria"
      operationId: "getListCriteria"
      parameters:
        - name: "pageNumber"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "pageSize"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                    $ref: "#/components/schemas/Criteria"
  /criteria/{id_criteria}:
    get:
      tags:
        - Criteria
      summary: "Get criteria by its identifier"
      operationId: "getCriteriaById"
      parameters:
        - name: "id_criteria"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Criteria"

    post:
      summary: "Post criteria"
      tags:
        - Criteria
      operationId: "createCriteria"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCriteria"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CreateCriteria"

    delete:
      summary: "DELETE criteria/{id_criteria}"
      tags:
        - Criteria
      operationId: "deleteCriteria"
      parameters:
        - name: "id_criteria"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
                example: "ressource deleted successfully"
    put:
      tags:
        - Criteria
      summary: "Put criteria"
      operationId: "upateOrcreateCriteria"
      parameters:
        - name: "id_criteria"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Criteria"

  /applicants:
    get:
      tags:
        - Applicant
      summary: "Get all applicants"
      operationId: "getAllApplicants"
      parameters:
        - name: "page"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
        - name: "pageSize"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: array
                items:
                 $ref: "#/components/schemas/Applicant"

  /applicants/create:
    post:
      tags:
        - Applicant
      summary: "Create applicant"
      operationId: "createApplicant"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Applicant"
  /applicants/update/{id_applicant}:
    put:
      tags:
        - Applicant
      summary: "PUT applicants/update/{id_applicant}"
      operationId: "updateApplicant"
      parameters:
        - name: "id_applicant"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                  $ref: "#/components/schemas/Applicant"
  /delete/applicants/{id}:
    delete:
      tags:
        - Applicant
      summary: "DELETE delete/applicants/{id}"
      operationId: "deleteApplicantById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"

  /applicants/status/{status}:
    get:
      tags:
        - Applicant
      summary: get applicants by status
      operationId: getApplicantsByStatus
      parameters:
        - name: status
          required: true
          in: path
      responses:
        '200':
            description: "list of students by status given"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Applicant"



components:
  schemas:
    CreateScholarship:
      type: object
      properties:
        scholarship_title:
          type: string
          example: "full scholarship"

        scholarship_description:
          type: string
          example: "This scholarship is ..."

        criteria:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Criteria"

        degree:
          type: string
          example: "Bachelor"
          enum:
            - Bachelor
            - Master
            - Doctorate

        Branch:
          type: string
          example: "Computer Science"

        Country:
          type: string
          example: "USA"

        Amount:
          type: integer
          format: int64
          example: 1000

    Scholarship:
      type: object
      allOf:
        - $ref:  "#/components/schemas/CreateScholarship"
      properties:
        id_scholarship:
          type: integer
          format: int64
          example: 1


    Criteria:
      type: object
      properties:
        id_criteria:
          type: integer
          format: int64
          example: 1
      allOf:
        - $ref: "#/components/schemas/CreateCriteria"


    CreateCriteria:
      type: object
      properties:
        criteria_description:
          type: string
          example: "here is the description of the criteria"

        mark:
          type: integer
          example: 10

    CreateApplicant:
        type: object
        properties:
            lastName:
                type: string
                example: 'DOE'
            firstName:
                type: string
                example: 'JOHN'
            birthdate:
                type: string
                format: date-time
            email:
                type: string
            degree:
                type: string
            lastAverage:
                type: integer
            status:
                type: string
            scholarshipIds:
                type: array

    Applicant:
        allOf:
          - $ref: "#/components/schemas/CreateApplicant"
        properties:
          idApplicant:
            type: integer
          status:
              type: string


    BadRequestException:
      type: object
      properties:
        type:
          type: string
          example: BadRequestException
        message:
          type: string
          example: Bad_Request










