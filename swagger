openapi: 3.0.3
info:
  title: Bourse a l'etranger
  description: Specification of my API on the tool for obtaining scholarships abroad
  version: '1.0'
  
servers:
  - url: https://scholarship
  
tags:
  - name: Scholarship
    description:  endpoints grouping the requests that will be made on scholarship
    
  - name: Applicant    
paths:
  /scholarship:
    get: 
      tags: 
        - Scholarship
      summary: get All Scholarship
      operationId: getScholarship
      
      responses: 
        '200':
          description: successful operation
          content: 
            application/json: 
              schema: 
                type: array
                items:  
                  $ref : "#/components/schemas/CreateScholarship"
        '400': 
          description: error not found
          content: 
            application/json: 
               schema:
                $ref: '#/components/schemas/BadRequestException' 
    put:
      tags:
        - Scholarship
      summary: Update an existing scholarship
      description: Update an existing scholarship by Id
      operationId: updateScholarship
      requestBody:
        description: Update an existent scholarship
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scholarship'
        required: true
        
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scholarship'          
          
        '400':
          description: Invalid ID supplied
        '404':
          description: Scholarship not found
        '405':
          description: Validation exception
          
    patch:
      tags:
        - Scholarship
      operationId: updatePartiallyScholarship
      summary: "Update existing scholarship"
      description: "Update scholarship"
      
      requestBody:
        description: Scholarship to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScholarship'
           
      responses:
        '200':
          description: Ressource updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scholarship'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException' 
    post:
      tags:
        - Scholarship
      summary: Add a new scholarship
      description: Add a new scholarship 
      operationId: addScholarship
      requestBody:
        description: Create a new scholarship
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScholarship'
          
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scholarship'
        '400':
          content: 
            application/json: 
               schema:
                $ref: '#/components/schemas/BadRequestException' 
          
  /scholarship/{id_scholarship}/applicant:   
    get: 
      tags: 
        - Scholarship
      description: get students who applied for the specified scholarship_id
      operationId: getAllApplicantToASpecifiedScholarship
      parameters: 
        - name: id_scholarship
          in: path
          required: true 
          schema:
            type: string
            default: available
           
      responses: 
        '200':
          description: operation successful 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/ScholarshipApplicant"
        '400': 
          description: bad request
          content: 
            application/json: 
               schema:
                $ref: '#/components/schemas/BadRequestException' 
  /scholarship/{branch}: 
  
    get: 
      tags:   
        - Scholarship 
      description: get Scholarship by branch
      operationId: getScholarshipByBranch
      parameters: 
        - name: branch 
          in: path
          required: true 
          schema: 
            type: string
            default: available
          
      responses: 
        '200': 
          description: operation successful 
          content:
            application/json: 
              schema: 
                $ref: "#/components/schemas/Scholarship"
            
        '400': 
          description: bad request
          content: 
            application/json: 
               schema:
                $ref: '#/components/schemas/BadRequestException'
                
  /scholarship/{id_scholarship}: 
    delete: 
      tags: 
        - Scholarship 
      description: delete scholarship by identifier 
      parameters:
        - name: id_scholarship
          in: path
          description: ID of scholarship to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Scholarship not found
     
  /applicant: 
    post: 
      tags: 
        - Applicant 
      description: Student apply for a scholarship 
      operationId: postAppliant 
      
      requestBody: 
        description: Update an existent scholarship
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudent'
        required: true
        
      responses: 
        '200': 
          description: student has successfully applied 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/ScholarshipApplicant"
        '400': 
          description: bad request
          content: 
            application/json: 
               schema:
                $ref: '#/components/schemas/BadRequestException'  
    get: 
      tags: 
        - Applicant 
      description: get all applicant 
      operationId: getAllApplicant 
      
      responses: 
        '200': 
          description: get all applicant 
          content: 
            application/json: 
              schema: 
                $ref: "#/components/schemas/ScholarshipApplicant"
                
        '400': 
          description: bad request
          content: 
            application/json: 
               schema:
                $ref: '#/components/schemas/BadRequestException'  
      
  
components:
  schemas:
    CreateScholarship: 
      type: object 
      properties: 
        scholarship_title: 
          type: string 
          example: "full scholarship"
          
        scholarship_description: 
          type: string 
          example: "This scholarship is ..."
        
        criteria: 
          type: array
          items: 
            allOf:
             - $ref: "#/components/schemas/Criteria"
          
        degree: 
          type: string 
          example: "Bachelor"
          enum:
            - Bachelor
            - Master
            - Doctorate
        
        Branch: 
          type: string 
          example: "Computer Science"
          
        Country: 
          type: string
          example: "USA"
        
        Amount: 
          type: integer
          format: int64
          example: 1000
          
    Scholarship: 
      type: object 
      allOf: 
        - $ref:  "#/components/schemas/CreateScholarship"   
      properties: 
        id_scholarship: 
          type: integer
          format: int64
          example: 1
     
     
    Criteria: 
      type: object 
      properties: 
        id_criteria:  
          type: integer 
          format: int64
          example: 1
      allOf: 
        - $ref: "#/components/schemas/CreateCriteria"
       
    
    CreateCriteria:   
      type: object 
      properties: 
        criteria_description: 
          type: string 
          example: "here is the description of the criteria"
          
        mark: 
          type: integer 
          example: 10
    
    CreateStudent: 
      type: object
      properties: 
        last_name:
          type: string 
          example: "DOE"
          
        first_name: 
          type: string 
          example: "John"
          
        birthdate: 
          type: string
          format: date-time
          example: "1999/10/25"
        
        id_scholarship: 
          type: integer
          example: 1
          
    Student: 
      type: object 
      properties: 
        id_student: 
          type: integer 
          format: int64
          example: 1
      allOf: 
        - $ref: "#/components/schemas/CreateStudent"
        
    ScholarshipApplicant: 
      properties: 
        student: 
          type: array
          items: 
            allOf:
             - $ref: "#/components/schemas/Student"  
             
        scholarship: 
          type: array
          items: 
            allOf:
             - $ref: "#/components/schemas/Scholarship"
          
    
    BadRequestException:
      type: object
      properties:
        type:
          type: string
          example: BadRequestException
        message:
          type: string
          example: Bad_Request   
      
      
          
          
          
            
       
        
    
  
